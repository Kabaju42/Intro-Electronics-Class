
Cirucuit Python
https://www.adafruit.com/category/956

Circuit Playground eXpress (CPX)
https://www.adafruit.com/product/3333
ATSAMD21 ARM Cortex M0 Processor, running at 3.3V and 48MHz

Micropython on circuit playground
https://learn.adafruit.com/adafruit-circuit-playground-express/python-playground

This small button in the center of the board is for Resetting the board. You can use this button to restart or reset the CPX.

If using Arduino or CircuitPython, press this button once to reset, double-click to enter the bootloader manually.

If using MakeCode, press this button twice to reset, once to enter the bootloader manually.

https://learn.adafruit.com/adafruit-circuit-playground-express/adafruit2-windows-driver-installation
 Mac and Linux do not require drivers, only Windows folks need to do this step 

Makecode app (Requires Windows 10)
https://www.microsoft.com/en-us/store/p/makecode-for-adafruit/9pgzhwsk0pgd


Circuit Python documentation
http://circuitpython.readthedocs.io/en/2.x/index.html


CPX REPL
https://learn.adafruit.com/circuit-playground-express-piano-in-the-key-of-lime/print-hello-circuitpython
https://learn.adafruit.com/adafruit-circuit-playground-express/serial-console-repl

linux connect line:
dmesg | grep tty
sudo adduser <username> dialout
screen /dev/ttyACM0 115200
ACM0


try pulse in info (remote)
pulseio.PulseIn



Add a lesson at the begining about REPL and 'it's better to ask forgiveness'
From the REPL type the following:
"from adafruit_circuitplayground.express import cpx"
Explain libraries and this is imorting a library of the circuit playground. Then you can see what' on it

type: "help(cpx)"
This prints out all of the members of the cpx object. everything that say's <property> is something you can read. Try:
"print(cpx.touchA6)"
now put your finger on the pad labeled A6 and try it again
"print(cpx.touchA6)"

Functions:
"cpx.play_tone()"
Gives the result:
"TypeError: function takes 3 positional arguments but 1 were given"

explain the 1 is 'self' that automatically gets passed in. so we can try adding two more
"cpx.play_tone(440, .25)" # frequency, time

"print(cpx.pixels)"
gives array of size 10 of hex values
"cpx.pixels[0] = 0x000010"
